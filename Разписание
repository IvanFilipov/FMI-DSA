
1. Увод в предметната област на курса, 
   свързване с други избираеми и задължителни курсове 

2. Увод в алгоритмите
-НОД (алгоритъм на Евклид с деление)
-просто число
-простите числа по-малки от N (решето на Ератостен)
-прости числа в интервала [a,b]
-комбинаторика : генериране на пермутации/вариации
                 пресмятане на  (n)
                                ( ) = ? ,чрез триъгълник на	
				(k)			Паскал
-алгоритми "търсене с връщане" : задачата за разходката на коня
				 задачата за разполагане на 8 дами на шахматна дъска				
				 
3.Увод в структурите от данни. Динамичен масив							 
-сложност на операциите.
-Нотацията голямо О.
-бързина на растежа на някои от познатите функции.
-темплейтни класове контейнери
-реализация на динамичен масив (vector)
-сложност на операциите + търсене

4. Свързан списък
-разновидности - едно/двусвързан, цикличен
-реализация + итератор
-сравнение с динамичния масив
-стек + статична/последователна реализация

5. Стек / Опашка
-приложения
-стек динамична реализация
-задачи върху използване на стек (скоби, обратен полски запис, Ханойските кули)
-опашка динамична + статична/последователна реализация
-дек, приоритетна опашка - обща идея

6. Сортиране / търсене

-концепции при сортировките 
	(стабилност, сравнения, размени, адаптивност към полусортирани данни)
-реализация на простите сортировки със сравнения :
	Метод на мехурчето, пряка селекция, сортиране чрез вмъкване

-алгоритми за търсене :
	последователно търсене, търсене със стъпка, двойчно търсене


7. Сортиране /част втора/

-концепция на алгоритмите "Разделяй и владей"

-сложни сортировки + техните реализации :
	"бързо" сортиране, сортиране чрез сливане, "пирамидално" сортиране

-сортировки приложими върху свързан списък + реализация
	
-сортировки без сравнения + техните реализации :
	сортиране чрез броене на честотите, сортиране в "кофи", сортиране по "разряди"
	
-кои сортировки можем да използваме като "частични"
	
8. Дървета

-обща концепция, рекурсивни дефиниции, приложения

-двойчно дърво за претърсване + имплементация :
	включване, изключване, търсене, обхождане,
	намиране на дълбочина, намиране броя на листата 
	
-дървета с прозволен брой разклонения,
	задачата за изоморфизъм на дървета
	
9. Дървета /част втора/

-балансирани/идеално балансирани дървета :

	-дефиниции, примери : Дърво на Фибоначи, пирамида за heap sort
	
	червено - черно дърво - приложнения 
		- имплементация  
		
	AVL дърво - идея
	
	"Бе" дървета обща идея,приложения + примерна имплементация					   
	
10. Хешове

-концепция + сложност на операциите

- хешираща функция, класически примери :
	остатък по модул размера на масива,
	сума ASCII кодовете + размера на стринга,
	хеширане по CRC
	
-справяне с колизии :
	затворено - чрез линейна стъпка,
				чрез квадратична стъпка,
				чрез двойно хеширане
				
	отворено - чрез списък на препълванията

-примерна реализация                            

11. Графи

-представяне в паметта, разлики, приложения

-търсене на път в граф :

	имплементация на "търсене в ширина" (BFS)/"търсене в дълбочина"(DFS) в "лабиринт",     
	имплементация на BFS/DFS обобщено 		

12. Графи /част втора/
	
-алгоритми за МПД (минимално покриващо дърво) :
	Прим и Крускал + имплементации  

	
13. Графи /част трета/


-алгоритми за разстояния в граф :

	-в нетегловен граф : BFS

	-в тегловен граф :
	
		Дийкстра -> най-къс път от върха s до всички останали 
				/без отрицателни тежести/

		Флойд - Варшал -> най - къс път между всяка двойка върхове     
		
		Форд - Белман -> най-къс път от върха s до всички останали
						/по-бавен от Дийкстра, но може и отрицателни тегла/   
		

14. Запознаване с контейнерите и алгоритмите
	от STL по стандартите C++ 11/13/17
    - регулярни изрази в C++


15. Обсъждане темите за проекти + насоки за добрите практики


